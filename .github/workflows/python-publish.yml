# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Publish Python Package to PyPI

on:
  release:
    types: [published]
  # Optional: Allow manual triggering
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build distribution packages
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout source
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine
        
    - name: Build source distribution and wheel
      run: |
        python -m build
        
    - name: Check distribution packages
      run: |
        python -m twine check dist/*
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: Publish Python distribution to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # Only publish on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/alan-terminal-ai/
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download distribution packages
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: Publish Python distribution to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest
    # Only run on releases or manual dispatch, but not on tags (to avoid conflicts)
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    environment:
      name: testpypi
      url: https://test.pypi.org/project/alan-terminal-ai/
    permissions:
      id-token: write

    steps:
    - name: Download distribution packages
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        
    - name: Publish distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
